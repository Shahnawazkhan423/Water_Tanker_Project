# Generated by Django 4.2.7 on 2025-08-11 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable')], default='unavailable', max_length=20)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to='Supplier.driveravailability')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(default='India', max_length=255)),
                ('pincode', models.CharField(max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterTankerDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_tanker_name', models.CharField(max_length=100)),
                ('is_approved', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='tanker/profile/')),
                ('driving_license', models.FileField(blank=True, null=True, upload_to='tanker/license/')),
                ('aadhar_card', models.FileField(blank=True, null=True, upload_to='tanker/aadhar/')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='tanker/pan/')),
                ('registration_cert', models.FileField(blank=True, null=True, upload_to='tanker/rc/')),
                ('vehicle_insurance', models.FileField(blank=True, null=True, upload_to='tanker/insurance/')),
                ('vehicle_permit', models.FileField(blank=True, null=True, upload_to='tanker/permit/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TankerDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveIntegerField(choices=[(1000, '1000 liters'), (2000, '2000 liters'), (5000, '5000 liters'), (10000, '10000 liters')])),
                ('category', models.CharField(choices=[('DRINKING', 'Drinking Water'), ('NON_DRINKING', 'Non-Drinking Water'), ('BOTH', 'Drinking & Usage Water')], max_length=20)),
                ('available', models.BooleanField(default=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Supplier.watertankerdocument')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Supplier.driverdetail')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_available', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Supplier.locationdetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
